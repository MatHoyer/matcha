version: '3.8'

services:
  db:
    container_name: ${POSTGRES_HOST}
    image: postgres:17
    restart: always
    env_file: .env
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    volumes:
      - matcha_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    container_name: matcha_app
    build: ./matcha_app
    env_file: .env
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
      - '${CLIENT_PORT}:${CLIENT_PORT}'
    volumes:
      - ./matcha_app:/matcha_app
      - ./matcha_app/node_modules:/matcha_app/node_modules
      - ./matcha_app/apps/server/node_modules:/matcha_app/apps/server/node_modules
      - ./matcha_app/apps/client/node_modules:/matcha_app/apps/client/node_modules
      - ./matcha_app/apps/common/node_modules:/matcha_app/apps/common/node_modules
    depends_on:
      db:
        condition: service_healthy
    command: bash -c "npm install && npm run dev"

  adminer:
    container_name: matcha_adminer
    image: adminer
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy

volumes:
  matcha_data:
